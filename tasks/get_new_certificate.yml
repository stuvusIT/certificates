---
- name: Create key directory
  file:
    path: "{{ certificates_local_key_dir }}"
    state: directory

- name: Generate client key and csr
  command: "openssl req -nodes -newkey rsa:{{ certificates_key_length }} -keyout {{ inventory_hostname }}.pem -out {{ inventory_hostname }}.csr -days {{ certificates_ca_days_valid }} -{{ certificates_ca_digest }} -subj /CN={{ certificates_common_name }}/"
  args:
    chdir: "{{ certificates_local_key_dir }}"
    creates: "{{ inventory_hostname }}.pem"

- name: Slurp certificate signing request
  slurp:
    src: "{{ certificates_local_key_dir }}/{{ inventory_hostname }}.csr"
  register: csr

- name: Copy to server
  copy:
    content: "{{ csr['content'] | b64decode }}"
    dest: "{{ certificates_ca_key_dir }}/{{ inventory_hostname }}.csr"
  delegate_to: "{{ certificates_ca_server }}"

- name: Sign client key
  command: openssl x509 -req -in {{ inventory_hostname }}.csr -out {{ inventory_hostname }}.crt -CA ca.crt -CAkey ca-key.pem -{{ certificates_ca_digest }} -days {{ certificates_ca_days_valid }} -CAcreateserial -extfile openssl-client.ext
  args:
    chdir: "{{ certificates_ca_key_dir }}"
    creates: "{{ inventory_hostname }}.crt"
  delegate_to: "{{ certificates_ca_server }}"

- name: Delete csr on ca server
  file:
    state: absent
    path: "{{ certificates_ca_key_dir }}/{{ inventory_hostname }}.csr"
  delegate_to: "{{ certificates_ca_server }}"

- name: Slurp certificate
  slurp:
    src: "{{ certificates_ca_key_dir }}/{{ inventory_hostname }}.crt"
  register: signed_certificate
  delegate_to: "{{ certificates_ca_server }}"

- name: Copy certificate to localhost
  copy:
    content: "{{ signed_certificate['content'] | b64decode }}"
    dest: "{{ certificates_local_key_dir }}/{{ inventory_hostname }}.crt"
    mode: 0644

- name: Delete csr on localhost
  file:
    state: absent
    path: "{{ certificates_local_key_dir }}/{{ inventory_hostname }}.csr"
