---
- name: Create key directory
  file:
    path: "{{ certificates_local_key_dir }}"
    state: directory

- name: Ensure privatekey exists
  openssl_privatekey:
    path: "{{ certificates_local_key_dir }}/{{ inventory_hostname }}.pem"
    size: "{{ certificates_key_length }}"

- name: Generate certificate signing request
  openssl_csr:
    path: "{{ certificates_local_key_dir }}/{{ inventory_hostname }}.csr"
    privatekey_path: "{{ certificates_local_key_dir }}/{{ inventory_hostname }}.pem"
    common_name: "{{ certificates_common_name }}"
    country_name: "{{ certificates_country_name }}"
    organization_name: "{{ certificates_organization_name }}"
    email_address: "{{ certificates_email_address }}"

- name: Slurp certificate signing request
  slurp:
    src: "{{ certificates_local_key_dir }}/{{ inventory_hostname }}.csr"
  register: csr

- name: Copy to server
  copy:
    content: "{{ csr['content'] | b64decode }}"
    dest: "{{ certificates_ca_key_dir }}/{{ inventory_hostname }}.csr"
  delegate_to: "{{ certificates_ca_server }}"

- name: Sign certificate signing request
  openssl_certificate:
    path: "{{ certificates_ca_key_dir }}/{{ inventory_hostname }}.crt"
    privatekey_path: "{{ certificates_ca_key_dir }}/ca-key.pem"
    provider: selfsigned
    csr_path: "{{ certificates_ca_key_dir }}/{{ inventory_hostname }}.csr"
  delegate_to: "{{ certificates_ca_server }}"

- name: Delete csr on ca server
  file:
    state: absent
    path: "{{ certificates_ca_key_dir }}/{{ inventory_hostname }}.csr"

- name: Slurp certificate
  slurp:
    src: "{{ certificates_ca_key_dir }}/{{ inventory_hostname }}.crt"
  register: signed_certificate
  delegate_to: "{{ certificates_ca_server }}"

- name: Copy certificate to localhost
  copy:
    content: "{{ signed_certificate['content'] | b64decode }}"
    dest: "{{ certificates_local_key_dir }}/{{ inventory_hostname }}.crt"

- name: Delete csr on localhost
  file:
    state: absent
    path: "{{ certificates_local_key_dir }}/{{ inventory_hostname }}.csr"
